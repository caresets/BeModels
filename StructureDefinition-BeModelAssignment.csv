"Id","Path","Slice Name","Alias(s)","Label","Min","Max","Must Support?","Is Modifier?","Is Summary?","Type(s)","Short","Definition","Comments","Requirements","Default Value","Meaning When Missing","Fixed Value","Pattern","Example","Minimum Value","Maximum Value","Maximum Length","Binding Strength","Binding Description","Binding Value Set","Code","Slicing Discriminator","Slicing Description","Slicing Ordered","Slicing Rules","Base Path","Base Min","Base Max","Condition(s)","Constraint(s)"
"BeModelAssignment","BeModelAssignment","","","",0,*,"","","","null {[]} {[]}
","BeModelAssignment","Logical model with the information for the assignment to a referral prescription of a care provider.","","","","","","","","","",,,,,"",,,,"Base",0,*,"",""
"BeModelAssignment.identifier","BeModelAssignment.identifier","","","",1,1,"","","","Identifier {[]} {[]}
","Business identifier. Absent during creation by client software, otherwise always present.","Business identifier. Absent during creation by client software, otherwise always present.","","","","","","","","","",,,,,"",,,,"BeModelAssignment.identifier",1,1,"",""
"BeModelAssignment.intent","BeModelAssignment.intent","","","",1,1,"","","","CodeableConcept {[]} {[]}
","Defaults to 'Order', since in this case it is always linked to a referral prescription.","Defaults to 'Order', since in this case it is always linked to a referral prescription.","","","","","","","","","",,,,,"",,,,"BeModelAssignment.intent",1,1,"",""
"BeModelAssignment.status","BeModelAssignment.status","","","",1,1,"","","","CodeableConcept {[]} {[]}
","Status of the task","Status of the task","","","","","","","","","",,,,,"",,,,"BeModelAssignment.status",1,1,"",""
"BeModelAssignment.statusReason","BeModelAssignment.statusReason","","","",0,1,"","","","CodeableConcept {[]} {[]}
","Provides details on the status of the task","Provides details on the status of the task","","","","","","","","","",,,,,"",,,,"BeModelAssignment.statusReason",0,1,"",""
"BeModelAssignment.originRequestId","BeModelAssignment.originRequestId","","","",1,1,"","","","Identifier {[]} {[]}
","Reference to the associated referral prescription","Reference to the associated referral prescription","","","","","","","","","",,,,,"",,,,"BeModelAssignment.originRequestId",1,1,"",""
"BeModelAssignment.treatmentStatusId","BeModelAssignment.treatmentStatusId","","","",1,1,"","","","Reference {[]} {[CanonicalType[http://example.org/StructureDefinition/BeModelTreatmentStatus]]}
","Reference to the 'TreatmentStatus', the treatment tracking associated with the prescription","Reference to the 'TreatmentStatus', the treatment tracking associated with the prescription","","","","","","","","","",,,,,"",,,,"BeModelAssignment.treatmentStatusId",1,1,"",""
"BeModelAssignment.organizationID","BeModelAssignment.organizationID","","","",0,1,"","","","Reference {[]} {[CanonicalType[http://example.org/StructureDefinition/BeModelOrganisationClaim]]}
","Reference to the organization Task","Reference to the organization Task","","","","","","","","","",,,,,"",,,,"BeModelAssignment.organizationID",0,1,"",""
"BeModelAssignment.performer","BeModelAssignment.performer","","","",1,*,"","","","BackboneElement {[]} {[]}
","Information about the intended performer of the task","Information about the intended performer of the task","","","","","","","","","",,,,,"",,,,"BeModelAssignment.performer",1,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
"
"BeModelAssignment.performer.id","BeModelAssignment.performer.id","","","",0,1,"","","","string {[]} {[]}
","Unique id for inter-element referencing","Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.","","","","","","","","","",,,,,"",,,,"Element.id",0,1,"",""
"BeModelAssignment.performer.extension","BeModelAssignment.performer.extension","","extensions
user content","",0,*,"","","","Extension {[]} {[]}
","Additional content defined by implementations","May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","","","","","","","","",,,,,"","value:url}
","Extensions are always sliced by (at least) url",,"open","Element.extension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}"
"BeModelAssignment.performer.modifierExtension","BeModelAssignment.performer.modifierExtension","","extensions
user contentmodifiers","",0,*,"","Y","Y","Extension {[]} {[]}
","Extensions that cannot be ignored even if unrecognized","May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](http://hl7.org/fhir/R4/extensibility.html#modifierExtension).","","","","","","","",,,,,"",,,,"BackboneElement.modifierExtension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}"
"BeModelAssignment.performer.role","BeModelAssignment.performer.role","","","",1,1,"","","","CodeableConcept {[]} {[]}
","Role of the provider assigned to provide the requested service","Role of the provider assigned to provide the requested service","","","","","","","","","",,,,,"",,,,"BeModelAssignment.performer.role",1,1,"",""
"BeModelAssignment.performer.actor","BeModelAssignment.performer.actor","","","",0,1,"","","","Identifier {[]} {[]}
","NISS of the provider assigned to provide the requested service","NISS of the provider assigned to provide the requested service","","","","","","","","","",,,,,"",,,,"BeModelAssignment.performer.actor",0,1,"",""
"BeModelAssignment.performer.organisation","BeModelAssignment.performer.organisation","","","",0,1,"","","","Identifier {[]} {[]}
","Organization assigned to provide the requested service (e.g. WGK, ...). In this case, it is the organization that is responsible for assigning the correct provider","Organization assigned to provide the requested service (e.g. WGK, ...). In this case, it is the organization that is responsible for assigning the correct provider","","","","","","","","","",,,,,"",,,,"BeModelAssignment.performer.organisation",0,1,"",""
"BeModelAssignment.performer.startdate","BeModelAssignment.performer.startdate","","","",0,1,"","","","dateTime {[]} {[]}
","Start date of the prescription execution (encoded by the healthcare provider who performs the treatment)","Start date of the prescription execution (encoded by the healthcare provider who performs the treatment)","","","","","","","","","",,,,,"",,,,"BeModelAssignment.performer.startdate",0,1,"",""
"BeModelAssignment.performer.endDate","BeModelAssignment.performer.endDate","","","",0,1,"","","","dateTime {[]} {[]}
","End date of the prescription execution (encoded by the healthcare provider who performs the treatment)","End date of the prescription execution (encoded by the healthcare provider who performs the treatment)","","","","","","","","","",,,,,"",,,,"BeModelAssignment.performer.endDate",0,1,"",""
